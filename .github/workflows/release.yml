name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
            name: mcp-bookmark-darwin-x64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: mcp-bookmark-darwin-arm64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }} --bin mcp-bookmark
          cargo build --release --target ${{ matrix.target }} --bin mcp-bookmark-native
      
      - name: Prepare binaries
        shell: bash
        run: |
          # Prepare mcp-bookmark
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/mcp-bookmark.exe ${{ matrix.name }}
            cp target/${{ matrix.target }}/release/mcp-bookmark-native.exe ${{ matrix.name }}-native
          else
            cp target/${{ matrix.target }}/release/mcp-bookmark ${{ matrix.name }}
            cp target/${{ matrix.target }}/release/mcp-bookmark-native ${{ matrix.name }}-native
            chmod +x ${{ matrix.name }}
            chmod +x ${{ matrix.name }}-native
          fi
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}
            ${{ matrix.name }}-native

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation
            
            ### macOS (Intel)
            ```bash
            # Download both binaries
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-darwin-x64 -o mcp-bookmark
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-darwin-x64-native -o mcp-bookmark-native
            chmod +x mcp-bookmark mcp-bookmark-native
            ```
            
            ### macOS (Apple Silicon)
            ```bash
            # Download both binaries
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-darwin-arm64 -o mcp-bookmark
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-darwin-arm64-native -o mcp-bookmark-native
            chmod +x mcp-bookmark mcp-bookmark-native
            ```
            
            ## Quick Start
            
            ### 1. Install Chrome Extension
            
            The Chrome extension enables indexing of authenticated pages and content extraction from your logged-in browser.
            
            - Configure Native Messaging Host with `mcp-bookmark-native` binary
            - See [Extension README](https://github.com/${{ github.repository }}/tree/main/bookmark-indexer-extension) for detailed setup
            
            ### 2. Run MCP Server
            
            ```bash
            # Use with Chrome extension index
            CHROME_PROFILE_NAME="Extension" CHROME_TARGET_FOLDER="YourFolderName" ./mcp-bookmark
            ```
            
            **Features**: 
            - üîê Works with authenticated pages
            - ‚ö° Fast local search with Tantivy
            - üéØ AI-friendly for Claude
            
            **Requirements**: macOS + Google Chrome
            
            See [full documentation](https://github.com/${{ github.repository }}) for configuration details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}