name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
            name: mcp-bookmark-darwin-x64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: mcp-bookmark-darwin-arm64
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: mcp-bookmark-linux-x64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: mcp-bookmark-windows-x64.exe

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Prepare binary
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/mcp-bookmark.exe ${{ matrix.name }}
          else
            cp target/${{ matrix.target }}/release/mcp-bookmark ${{ matrix.name }}
            chmod +x ${{ matrix.name }}
          fi
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## インストール方法
            
            ### macOS (Intel)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-darwin-x64 -o mcp-bookmark
            chmod +x mcp-bookmark
            sudo mv mcp-bookmark /usr/local/bin/
            ```
            
            ### macOS (Apple Silicon)
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-darwin-arm64 -o mcp-bookmark
            chmod +x mcp-bookmark
            sudo mv mcp-bookmark /usr/local/bin/
            ```
            
            ### Linux
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-linux-x64 -o mcp-bookmark
            chmod +x mcp-bookmark
            sudo mv mcp-bookmark /usr/local/bin/
            ```
            
            ### Windows
            PowerShellで実行:
            ```powershell
            Invoke-WebRequest -Uri "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcp-bookmark-windows-x64.exe" -OutFile "mcp-bookmark.exe"
            ```
            
            ## Claude設定
            
            `~/.config/claude/config.json` (Mac/Linux) または `%APPDATA%\Claude\config.json` (Windows):
            
            ```json
            {
              "mcpServers": {
                "mcp-bookmark": {
                  "command": "mcp-bookmark",
                  "args": []
                }
              }
            }
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}